// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by Reqnroll (https://www.reqnroll.net/).
//      Reqnroll Version:2.0.0.0
//      Reqnroll Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace MoneyTrackerReqnroll.Features
{
    using Reqnroll;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Reqnroll", "2.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class GestionPerfilUsuariosFeature : object, Xunit.IClassFixture<GestionPerfilUsuariosFeature.FixtureData>, Xunit.IAsyncLifetime
    {
        
        private global::Reqnroll.ITestRunner testRunner;
        
        private static string[] featureTags = ((string[])(null));
        
        private static global::Reqnroll.FeatureInfo featureInfo = new global::Reqnroll.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "GestionPerfilUsuarios", "  Pruebas para la gestión del perfil de usuarios, verificando acciones de edición" +
                " y eliminación", global::Reqnroll.ProgrammingLanguage.CSharp, featureTags);
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "GestionPerfilUsuarios.feature"
#line hidden
        
        public GestionPerfilUsuariosFeature(GestionPerfilUsuariosFeature.FixtureData fixtureData, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
        }
        
        public static async System.Threading.Tasks.Task FeatureSetupAsync()
        {
        }
        
        public static async System.Threading.Tasks.Task FeatureTearDownAsync()
        {
        }
        
        public async System.Threading.Tasks.Task TestInitializeAsync()
        {
            testRunner = global::Reqnroll.TestRunnerManager.GetTestRunnerForAssembly(featureHint: featureInfo);
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Equals(featureInfo) == false)))
            {
                await testRunner.OnFeatureEndAsync();
            }
            if ((testRunner.FeatureContext == null))
            {
                await testRunner.OnFeatureStartAsync(featureInfo);
            }
        }
        
        public async System.Threading.Tasks.Task TestTearDownAsync()
        {
            await testRunner.OnScenarioEndAsync();
            global::Reqnroll.TestRunnerManager.ReleaseTestRunner(testRunner);
        }
        
        public void ScenarioInitialize(global::Reqnroll.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public async System.Threading.Tasks.Task ScenarioStartAsync()
        {
            await testRunner.OnScenarioStartAsync();
        }
        
        public async System.Threading.Tasks.Task ScenarioCleanupAsync()
        {
            await testRunner.CollectScenarioErrorsAsync();
        }
        
        async System.Threading.Tasks.Task Xunit.IAsyncLifetime.InitializeAsync()
        {
            await this.TestInitializeAsync();
        }
        
        async System.Threading.Tasks.Task Xunit.IAsyncLifetime.DisposeAsync()
        {
            await this.TestTearDownAsync();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Verificar que los datos para crear usuario se guarden correctamente en “Mi Perfil" +
            "”")]
        [Xunit.TraitAttribute("FeatureTitle", "GestionPerfilUsuarios")]
        [Xunit.TraitAttribute("Description", "Verificar que los datos para crear usuario se guarden correctamente en “Mi Perfil" +
            "”")]
        [Xunit.TraitAttribute("Category", "GPU_001")]
        public async System.Threading.Tasks.Task VerificarQueLosDatosParaCrearUsuarioSeGuardenCorrectamenteEnMiPerfil()
        {
            string[] tagsOfScenario = new string[] {
                    "GPU_001"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Verificar que los datos para crear usuario se guarden correctamente en “Mi Perfil" +
                    "”", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 7
  await testRunner.GivenAsync("El usuario se encuentra en la página principal", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
#line 8
  await testRunner.WhenAsync("El usuario hace clic en el enlace \"Crea una nueva Cuenta\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
                global::Reqnroll.Table table8 = new global::Reqnroll.Table(new string[] {
                            "Nombre",
                            "Apellido",
                            "Correo",
                            "Contraseña",
                            "Confirmación"});
                table8.AddRow(new string[] {
                            "Lindsay",
                            "Ordoñez",
                            "domlin516@gmail.com",
                            "654321",
                            "654321"});
#line 9
  await testRunner.AndAsync("El usuario llena el formulario con", ((string)(null)), table8, "And ");
#line hidden
#line 12
  await testRunner.AndAsync("El usuario hace clic en el botón \"Crear Cuenta\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 13
  await testRunner.ThenAsync("El sistema muestra un mensaje de éxito \"User created successfully\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 14
  await testRunner.WhenAsync("El usuario hace clic en el enlace \"Volver a la página de inicio\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "When ");
#line hidden
#line 15
  await testRunner.AndAsync("El usuario navega a la página de inicio de sesión", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
                global::Reqnroll.Table table9 = new global::Reqnroll.Table(new string[] {
                            "Correo",
                            "Contraseña"});
                table9.AddRow(new string[] {
                            "domlin516@gmail.com",
                            "654321"});
#line 16
  await testRunner.AndAsync("El usuario ingresa su correo y contraseña", ((string)(null)), table9, "And ");
#line hidden
#line 19
  await testRunner.AndAsync("El usuario hace clic en el botón \"Iniciar Sesión\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 20
  await testRunner.AndAsync("El usuario se dirige al apartado de Perfil", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
                global::Reqnroll.Table table10 = new global::Reqnroll.Table(new string[] {
                            "Nombre",
                            "Apellido",
                            "Correo"});
                table10.AddRow(new string[] {
                            "Lindsay",
                            "Ordoñez",
                            "domlin516@gmail.com"});
#line 21
  await testRunner.ThenAsync("Los datos ingresados coinciden con los datos mostrados en el perfil", ((string)(null)), table10, "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Editar el Nombre dejando el campo vacío")]
        [Xunit.TraitAttribute("FeatureTitle", "GestionPerfilUsuarios")]
        [Xunit.TraitAttribute("Description", "Editar el Nombre dejando el campo vacío")]
        [Xunit.TraitAttribute("Category", "GPU_002")]
        public async System.Threading.Tasks.Task EditarElNombreDejandoElCampoVacio()
        {
            string[] tagsOfScenario = new string[] {
                    "GPU_002"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Editar el Nombre dejando el campo vacío", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 26
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 27
  await testRunner.GivenAsync("El usuario se encuentra en la página principal", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
                global::Reqnroll.Table table11 = new global::Reqnroll.Table(new string[] {
                            "Correo",
                            "Contraseña"});
                table11.AddRow(new string[] {
                            "domlin515@gmail.com",
                            "654321"});
#line 28
  await testRunner.WhenAsync("El usuario ingresa su correo y contraseña", ((string)(null)), table11, "When ");
#line hidden
#line 31
  await testRunner.AndAsync("El usuario hace clic en el botón \"Iniciar Sesión\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 32
  await testRunner.AndAsync("El usuario se dirige al apartado de Perfil", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
                global::Reqnroll.Table table12 = new global::Reqnroll.Table(new string[] {
                            "Nombre",
                            "Apellido",
                            "Correo"});
                table12.AddRow(new string[] {
                            "",
                            "Ordoñez",
                            "domlin515@gmail.com"});
#line 33
  await testRunner.AndAsync("El usuario edita el formulario de perfil con", ((string)(null)), table12, "And ");
#line hidden
#line 36
  await testRunner.AndAsync("El usuario hace clic en el botón \"Guardar Cambios\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 37
  await testRunner.ThenAsync("El campo de nombre muestra una validación HTML \"Please fill out this field\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Editar el Apellido dejando el campo vacío")]
        [Xunit.TraitAttribute("FeatureTitle", "GestionPerfilUsuarios")]
        [Xunit.TraitAttribute("Description", "Editar el Apellido dejando el campo vacío")]
        [Xunit.TraitAttribute("Category", "GPU_003")]
        public async System.Threading.Tasks.Task EditarElApellidoDejandoElCampoVacio()
        {
            string[] tagsOfScenario = new string[] {
                    "GPU_003"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Editar el Apellido dejando el campo vacío", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 40
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 41
  await testRunner.GivenAsync("El usuario se encuentra en la página principal", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
                global::Reqnroll.Table table13 = new global::Reqnroll.Table(new string[] {
                            "Correo",
                            "Contraseña"});
                table13.AddRow(new string[] {
                            "domlin515@gmail.com",
                            "654321"});
#line 42
  await testRunner.WhenAsync("El usuario ingresa su correo y contraseña", ((string)(null)), table13, "When ");
#line hidden
#line 45
  await testRunner.AndAsync("El usuario hace clic en el botón \"Iniciar Sesión\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 46
  await testRunner.AndAsync("El usuario se dirige al apartado de Perfil", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
                global::Reqnroll.Table table14 = new global::Reqnroll.Table(new string[] {
                            "Nombre",
                            "Apellido",
                            "Correo"});
                table14.AddRow(new string[] {
                            "Lindsay",
                            "",
                            "domlin515@gmail.com"});
#line 47
  await testRunner.AndAsync("El usuario edita el formulario de perfil con", ((string)(null)), table14, "And ");
#line hidden
#line 50
  await testRunner.AndAsync("El usuario hace clic en el botón \"Guardar Cambios\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 51
  await testRunner.ThenAsync("El campo de apellido muestra una validacion HTML \"Please fill out this field\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Editar el apellido con caracteres especiales")]
        [Xunit.TraitAttribute("FeatureTitle", "GestionPerfilUsuarios")]
        [Xunit.TraitAttribute("Description", "Editar el apellido con caracteres especiales")]
        [Xunit.TraitAttribute("Category", "GPU_004")]
        public async System.Threading.Tasks.Task EditarElApellidoConCaracteresEspeciales()
        {
            string[] tagsOfScenario = new string[] {
                    "GPU_004"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Editar el apellido con caracteres especiales", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 54
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 55
  await testRunner.GivenAsync("El usuario se encuentra en la página principal", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
                global::Reqnroll.Table table15 = new global::Reqnroll.Table(new string[] {
                            "Correo",
                            "Contraseña"});
                table15.AddRow(new string[] {
                            "domlin515@gmail.com",
                            "654321"});
#line 56
  await testRunner.WhenAsync("El usuario ingresa su correo y contraseña", ((string)(null)), table15, "When ");
#line hidden
#line 59
  await testRunner.AndAsync("El usuario hace clic en el botón \"Iniciar Sesión\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 60
  await testRunner.AndAsync("El usuario se dirige al apartado de Perfil", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
                global::Reqnroll.Table table16 = new global::Reqnroll.Table(new string[] {
                            "Nombre",
                            "Apellido",
                            "Correo"});
                table16.AddRow(new string[] {
                            "Lindsay",
                            "Ordonez123",
                            "domlin515@gmail.com"});
#line 61
  await testRunner.AndAsync("El usuario edita el formulario de perfil con", ((string)(null)), table16, "And ");
#line hidden
#line 64
  await testRunner.AndAsync("El usuario hace clic en el botón \"Guardar Cambios\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 65
  await testRunner.ThenAsync("El campo de apellido muestra una validacion HTML \"Please match the requested form" +
                        "at.\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Editar la sección de Biografía con más de 150 caracteres")]
        [Xunit.TraitAttribute("FeatureTitle", "GestionPerfilUsuarios")]
        [Xunit.TraitAttribute("Description", "Editar la sección de Biografía con más de 150 caracteres")]
        [Xunit.TraitAttribute("Category", "GPU_005")]
        public async System.Threading.Tasks.Task EditarLaSeccionDeBiografiaConMasDe150Caracteres()
        {
            string[] tagsOfScenario = new string[] {
                    "GPU_005"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Editar la sección de Biografía con más de 150 caracteres", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 69
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 70
  await testRunner.GivenAsync("El usuario se encuentra en la página principal", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
                global::Reqnroll.Table table17 = new global::Reqnroll.Table(new string[] {
                            "Correo",
                            "Contraseña"});
                table17.AddRow(new string[] {
                            "domlin515@gmail.com",
                            "654321"});
#line 71
  await testRunner.WhenAsync("El usuario ingresa su correo y contraseña", ((string)(null)), table17, "When ");
#line hidden
#line 74
  await testRunner.AndAsync("El usuario hace clic en el botón \"Iniciar Sesión\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 75
  await testRunner.AndAsync("El usuario se dirige al apartado de Perfil", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
                global::Reqnroll.Table table18 = new global::Reqnroll.Table(new string[] {
                            "Nombre",
                            "Apellido",
                            "Correo",
                            "Biografía"});
                table18.AddRow(new string[] {
                            "Lindsay",
                            "Ordoñez",
                            "domlin515@gmail.com",
                            "Hola mi nombre es Lindsay Domenique Barrionuevo Ordoñez y esta es mi biografia in" +
                                "icial en Money Tracker, quiero probar este sistema de gestión de mis finanzas."});
#line 76
  await testRunner.AndAsync("El usuario edita el formulario de perfil con biografía", ((string)(null)), table18, "And ");
#line hidden
#line 79
  await testRunner.AndAsync("El usuario hace clic en el botón \"Guardar Cambios\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 80
  await testRunner.ThenAsync("El sistema muestra un mensaje de éxito \"Usuario actualizado con éxito\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Editar la sección de Biografía con más de 500 caracteres")]
        [Xunit.TraitAttribute("FeatureTitle", "GestionPerfilUsuarios")]
        [Xunit.TraitAttribute("Description", "Editar la sección de Biografía con más de 500 caracteres")]
        [Xunit.TraitAttribute("Category", "GPU_006")]
        public async System.Threading.Tasks.Task EditarLaSeccionDeBiografiaConMasDe500Caracteres()
        {
            string[] tagsOfScenario = new string[] {
                    "GPU_006"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Editar la sección de Biografía con más de 500 caracteres", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 84
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 85
  await testRunner.GivenAsync("El usuario se encuentra en la página principal", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
                global::Reqnroll.Table table19 = new global::Reqnroll.Table(new string[] {
                            "Correo",
                            "Contraseña"});
                table19.AddRow(new string[] {
                            "domlin515@gmail.com",
                            "654321"});
#line 86
  await testRunner.WhenAsync("El usuario ingresa su correo y contraseña", ((string)(null)), table19, "When ");
#line hidden
#line 89
  await testRunner.AndAsync("El usuario hace clic en el botón \"Iniciar Sesión\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 90
  await testRunner.AndAsync("El usuario se dirige al apartado de Perfil", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
                global::Reqnroll.Table table20 = new global::Reqnroll.Table(new string[] {
                            "Nombre",
                            "Apellido",
                            "Correo",
                            "Biografía"});
                table20.AddRow(new string[] {
                            "Lindsay",
                            "Ordoñez",
                            "domlin515@gmail.com",
                            @"Hola mi nombre es Lindsay Domenique Barrionuevo Ordoñez y esta es mi biografía inicial en Money Tracker, quiero probar este sistema de gestión de finanzas personales. Tengo 21 años, en unos meses cumpliré 22. Me considero amante de los gatos y de los perros porque son animalitos muy lindos y tiernos. Estoy cursando el Sexto Semestre de Ingeniería en Software y ha sido una carrera muy dura. Esta aplicación es uno de mis proyectos personales realizado junto a mis mejores amigos y compañeros de esta carrera."});
#line 91
  await testRunner.AndAsync("El usuario edita el formulario de perfil con biografía", ((string)(null)), table20, "And ");
#line hidden
#line 94
  await testRunner.AndAsync("El usuario hace clic en el botón \"Guardar Cambios\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 95
  await testRunner.ThenAsync("El sistema muestra un mensaje de error \"La biografía no puede exceder los 500 car" +
                        "acteres\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Intentar editar el Correo Electrónico dejando el campo vacío")]
        [Xunit.TraitAttribute("FeatureTitle", "GestionPerfilUsuarios")]
        [Xunit.TraitAttribute("Description", "Intentar editar el Correo Electrónico dejando el campo vacío")]
        [Xunit.TraitAttribute("Category", "GPU_007")]
        public async System.Threading.Tasks.Task IntentarEditarElCorreoElectronicoDejandoElCampoVacio()
        {
            string[] tagsOfScenario = new string[] {
                    "GPU_007"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Intentar editar el Correo Electrónico dejando el campo vacío", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 98
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 99
  await testRunner.GivenAsync("El usuario se encuentra en la página principal", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
                global::Reqnroll.Table table21 = new global::Reqnroll.Table(new string[] {
                            "Correo",
                            "Contraseña"});
                table21.AddRow(new string[] {
                            "domlin515@gmail.com",
                            "654321"});
#line 100
  await testRunner.WhenAsync("El usuario ingresa su correo y contraseña", ((string)(null)), table21, "When ");
#line hidden
#line 103
  await testRunner.AndAsync("El usuario hace clic en el botón \"Iniciar Sesión\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 104
  await testRunner.AndAsync("El usuario se dirige al apartado de Perfil", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
                global::Reqnroll.Table table22 = new global::Reqnroll.Table(new string[] {
                            "Nombre",
                            "Apellido",
                            "Correo"});
                table22.AddRow(new string[] {
                            "Lindsay",
                            "Ordoñez",
                            ""});
#line 105
  await testRunner.AndAsync("El usuario edita el formulario de perfil con", ((string)(null)), table22, "And ");
#line hidden
#line 108
  await testRunner.AndAsync("El usuario hace clic en el botón \"Guardar Cambios\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 109
  await testRunner.ThenAsync("El sistema muestra un mensaje de error \"El correo electrónico no puede estar vací" +
                        "o\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Subir foto para el perfil en sección “Tu Foto”")]
        [Xunit.TraitAttribute("FeatureTitle", "GestionPerfilUsuarios")]
        [Xunit.TraitAttribute("Description", "Subir foto para el perfil en sección “Tu Foto”")]
        [Xunit.TraitAttribute("Category", "GPU_008")]
        public async System.Threading.Tasks.Task SubirFotoParaElPerfilEnSeccionTuFoto()
        {
            string[] tagsOfScenario = new string[] {
                    "GPU_008"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Subir foto para el perfil en sección “Tu Foto”", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 112
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 113
  await testRunner.GivenAsync("El usuario se encuentra en la página principal", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
                global::Reqnroll.Table table23 = new global::Reqnroll.Table(new string[] {
                            "Correo",
                            "Contraseña"});
                table23.AddRow(new string[] {
                            "domlin515@gmail.com",
                            "654321"});
#line 114
  await testRunner.WhenAsync("El usuario ingresa su correo y contraseña", ((string)(null)), table23, "When ");
#line hidden
#line 117
  await testRunner.AndAsync("El usuario hace clic en el botón \"Iniciar Sesión\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 118
  await testRunner.AndAsync("El usuario se dirige al apartado de Perfil", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 119
  await testRunner.AndAsync("El usuario sube una foto al campo \"Tu Foto\" con el archivo \"ArchivoCarnet.png\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 120
  await testRunner.AndAsync("El usuario hace clic en el botón \"Guardar Cambios\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 121
  await testRunner.ThenAsync("El sistema muestra un mensaje de éxito \"Usuario actualizado con éxito\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
#line 122
  await testRunner.AndAsync("La foto subida se muestra en la sección \"Tu Foto\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Editar el Nombre y Apellido con Datos Válidos")]
        [Xunit.TraitAttribute("FeatureTitle", "GestionPerfilUsuarios")]
        [Xunit.TraitAttribute("Description", "Editar el Nombre y Apellido con Datos Válidos")]
        [Xunit.TraitAttribute("Category", "GPU_009")]
        public async System.Threading.Tasks.Task EditarElNombreYApellidoConDatosValidos()
        {
            string[] tagsOfScenario = new string[] {
                    "GPU_009"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Editar el Nombre y Apellido con Datos Válidos", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 125
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 126
  await testRunner.GivenAsync("El usuario se encuentra en la página principal", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
                global::Reqnroll.Table table24 = new global::Reqnroll.Table(new string[] {
                            "Correo",
                            "Contraseña"});
                table24.AddRow(new string[] {
                            "domlin515@gmail.com",
                            "654321"});
#line 127
  await testRunner.WhenAsync("El usuario ingresa su correo y contraseña", ((string)(null)), table24, "When ");
#line hidden
#line 130
  await testRunner.AndAsync("El usuario hace clic en el botón \"Iniciar Sesión\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 131
  await testRunner.AndAsync("El usuario se dirige al apartado de Perfil", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
                global::Reqnroll.Table table25 = new global::Reqnroll.Table(new string[] {
                            "Nombre",
                            "Apellido",
                            "Correo"});
                table25.AddRow(new string[] {
                            "Domenique",
                            "Rivera",
                            "domlin515@gmail.com"});
#line 132
  await testRunner.AndAsync("El usuario edita el formulario de perfil con", ((string)(null)), table25, "And ");
#line hidden
#line 135
  await testRunner.AndAsync("El usuario hace clic en el botón \"Guardar Cambios\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 136
  await testRunner.ThenAsync("El sistema muestra un mensaje de éxito \"Usuario actualizado con éxito\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [Xunit.SkippableFactAttribute(DisplayName="Eliminar cuenta desde la sección de Mi Perfil")]
        [Xunit.TraitAttribute("FeatureTitle", "GestionPerfilUsuarios")]
        [Xunit.TraitAttribute("Description", "Eliminar cuenta desde la sección de Mi Perfil")]
        [Xunit.TraitAttribute("Category", "GPU_010")]
        public async System.Threading.Tasks.Task EliminarCuentaDesdeLaSeccionDeMiPerfil()
        {
            string[] tagsOfScenario = new string[] {
                    "GPU_010"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            global::Reqnroll.ScenarioInfo scenarioInfo = new global::Reqnroll.ScenarioInfo("Eliminar cuenta desde la sección de Mi Perfil", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 139
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((global::Reqnroll.TagHelper.ContainsIgnoreTag(scenarioInfo.CombinedTags) || global::Reqnroll.TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                await this.ScenarioStartAsync();
#line 140
  await testRunner.GivenAsync("El usuario se encuentra en la página principal", ((string)(null)), ((global::Reqnroll.Table)(null)), "Given ");
#line hidden
                global::Reqnroll.Table table26 = new global::Reqnroll.Table(new string[] {
                            "Correo",
                            "Contraseña"});
                table26.AddRow(new string[] {
                            "domlin514@gmail.com",
                            "654321"});
#line 141
  await testRunner.WhenAsync("El usuario ingresa su correo y contraseña", ((string)(null)), table26, "When ");
#line hidden
#line 144
  await testRunner.AndAsync("El usuario hace clic en el botón \"Iniciar Sesión\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 145
  await testRunner.AndAsync("El usuario se dirige al apartado de Perfil", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 146
  await testRunner.AndAsync("El usuario hace clic en el botón \"Eliminar\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 147
  await testRunner.AndAsync("El usuario confirma la eliminación haciendo clic en \"Eliminar\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "And ");
#line hidden
#line 148
  await testRunner.ThenAsync("El sistema redirige a la página de login con la URL \"http://localhost:3000/\"", ((string)(null)), ((global::Reqnroll.Table)(null)), "Then ");
#line hidden
            }
            await this.ScenarioCleanupAsync();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("Reqnroll", "2.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : object, Xunit.IAsyncLifetime
        {
            
            async System.Threading.Tasks.Task Xunit.IAsyncLifetime.InitializeAsync()
            {
                await GestionPerfilUsuariosFeature.FeatureSetupAsync();
            }
            
            async System.Threading.Tasks.Task Xunit.IAsyncLifetime.DisposeAsync()
            {
                await GestionPerfilUsuariosFeature.FeatureTearDownAsync();
            }
        }
    }
}
#pragma warning restore
#endregion
